/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.madhouse.madmax.avro;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MediaBid extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -4722218199079708642L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MediaBid\",\"namespace\":\"com.madhouse.madmax.avro\",\"fields\":[{\"name\":\"status\",\"type\":\"int\",\"default\":204},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"impid\",\"type\":\"string\"},{\"name\":\"ts\",\"type\":\"long\"},{\"name\":\"request\",\"type\":{\"type\":\"record\",\"name\":\"MediaRequest\",\"fields\":[{\"name\":\"bid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"sspid\",\"type\":\"long\"},{\"name\":\"mediaid\",\"type\":\"long\"},{\"name\":\"adspaceid\",\"type\":\"long\"},{\"name\":\"adtype\",\"type\":\"int\"},{\"name\":\"pkgname\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"appname\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"connectiontype\",\"type\":\"int\",\"default\":0},{\"name\":\"carrier\",\"type\":\"int\",\"default\":0},{\"name\":\"os\",\"type\":\"int\",\"default\":0},{\"name\":\"osv\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"did\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"didmd5\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"dpid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"dpidmd5\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"mac\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"macmd5\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ifa\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"device\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"devicetype\",\"type\":\"int\",\"default\":0},{\"name\":\"ua\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"location\",\"type\":\"string\",\"default\":\"1000000000\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"pid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"pcat\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"media\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"density\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"dealid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"mcell\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"label\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"lat\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"lon\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"make\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"model\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"test\",\"type\":\"int\",\"default\":0},{\"name\":\"bidtype\",\"type\":\"int\",\"default\":1},{\"name\":\"bidfloor\",\"type\":\"int\",\"default\":0}]}},{\"name\":\"response\",\"type\":[\"null\",{\"type\":\"record\",\"name\":\"MediaResponse\",\"fields\":[{\"name\":\"projectid\",\"type\":\"long\",\"default\":0},{\"name\":\"cid\",\"type\":\"long\",\"default\":0},{\"name\":\"crid\",\"type\":\"long\",\"default\":0},{\"name\":\"brand\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"layout\",\"type\":\"int\",\"default\":0},{\"name\":\"price\",\"type\":\"int\",\"default\":0},{\"name\":\"icon\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"cover\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"title\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"desc\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"content\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"duration\",\"type\":\"int\",\"default\":0},{\"name\":\"adm\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"dealid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"lpgurl\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"monitor\",\"type\":{\"type\":\"record\",\"name\":\"Monitor\",\"fields\":[{\"name\":\"impurl\",\"type\":[\"null\",{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Track\",\"fields\":[{\"name\":\"startdelay\",\"type\":\"int\",\"default\":0},{\"name\":\"url\",\"type\":\"string\"}]}}],\"default\":null},{\"name\":\"clkurl\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"securl\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null},{\"name\":\"exptime\",\"type\":\"int\",\"default\":86400},{\"name\":\"exts\",\"type\":[\"null\",{\"type\":\"array\",\"items\":\"string\"}],\"default\":null}]},\"default\":null}]}],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MediaBid> ENCODER =
      new BinaryMessageEncoder<MediaBid>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MediaBid> DECODER =
      new BinaryMessageDecoder<MediaBid>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MediaBid> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MediaBid> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MediaBid>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MediaBid to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MediaBid from a ByteBuffer. */
  public static MediaBid fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public int status;
  @Deprecated public CharSequence ip;
  @Deprecated public CharSequence impid;
  @Deprecated public long ts;
  @Deprecated public com.madhouse.madmax.avro.MediaRequest request;
  @Deprecated public com.madhouse.madmax.avro.MediaResponse response;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MediaBid() {}

  /**
   * All-args constructor.
   * @param status The new value for status
   * @param ip The new value for ip
   * @param impid The new value for impid
   * @param ts The new value for ts
   * @param request The new value for request
   * @param response The new value for response
   */
  public MediaBid(Integer status, CharSequence ip, CharSequence impid, Long ts, com.madhouse.madmax.avro.MediaRequest request, com.madhouse.madmax.avro.MediaResponse response) {
    this.status = status;
    this.ip = ip;
    this.impid = impid;
    this.ts = ts;
    this.request = request;
    this.response = response;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return status;
    case 1: return ip;
    case 2: return impid;
    case 3: return ts;
    case 4: return request;
    case 5: return response;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: status = (Integer)value$; break;
    case 1: ip = (CharSequence)value$; break;
    case 2: impid = (CharSequence)value$; break;
    case 3: ts = (Long)value$; break;
    case 4: request = (com.madhouse.madmax.avro.MediaRequest)value$; break;
    case 5: response = (com.madhouse.madmax.avro.MediaResponse)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'status' field.
   * @return The value of the 'status' field.
   */
  public Integer getStatus() {
    return status;
  }

  /**
   * Sets the value of the 'status' field.
   * @param value the value to set.
   */
  public void setStatus(Integer value) {
    this.status = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'impid' field.
   * @return The value of the 'impid' field.
   */
  public CharSequence getImpid() {
    return impid;
  }

  /**
   * Sets the value of the 'impid' field.
   * @param value the value to set.
   */
  public void setImpid(CharSequence value) {
    this.impid = value;
  }

  /**
   * Gets the value of the 'ts' field.
   * @return The value of the 'ts' field.
   */
  public Long getTs() {
    return ts;
  }

  /**
   * Sets the value of the 'ts' field.
   * @param value the value to set.
   */
  public void setTs(Long value) {
    this.ts = value;
  }

  /**
   * Gets the value of the 'request' field.
   * @return The value of the 'request' field.
   */
  public com.madhouse.madmax.avro.MediaRequest getRequest() {
    return request;
  }

  /**
   * Sets the value of the 'request' field.
   * @param value the value to set.
   */
  public void setRequest(com.madhouse.madmax.avro.MediaRequest value) {
    this.request = value;
  }

  /**
   * Gets the value of the 'response' field.
   * @return The value of the 'response' field.
   */
  public com.madhouse.madmax.avro.MediaResponse getResponse() {
    return response;
  }

  /**
   * Sets the value of the 'response' field.
   * @param value the value to set.
   */
  public void setResponse(com.madhouse.madmax.avro.MediaResponse value) {
    this.response = value;
  }

  /**
   * Creates a new MediaBid RecordBuilder.
   * @return A new MediaBid RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new MediaBid RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MediaBid RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new MediaBid RecordBuilder by copying an existing MediaBid instance.
   * @param other The existing instance to copy.
   * @return A new MediaBid RecordBuilder
   */
  public static Builder newBuilder(MediaBid other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for MediaBid instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MediaBid>
    implements org.apache.avro.data.RecordBuilder<MediaBid> {

    private int status;
    private CharSequence ip;
    private CharSequence impid;
    private long ts;
    private com.madhouse.madmax.avro.MediaRequest request;
    private com.madhouse.madmax.avro.MediaRequest.Builder requestBuilder;
    private com.madhouse.madmax.avro.MediaResponse response;
    private com.madhouse.madmax.avro.MediaResponse.Builder responseBuilder;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.status)) {
        this.status = data().deepCopy(fields()[0].schema(), other.status);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ip)) {
        this.ip = data().deepCopy(fields()[1].schema(), other.ip);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.impid)) {
        this.impid = data().deepCopy(fields()[2].schema(), other.impid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ts)) {
        this.ts = data().deepCopy(fields()[3].schema(), other.ts);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.request)) {
        this.request = data().deepCopy(fields()[4].schema(), other.request);
        fieldSetFlags()[4] = true;
      }
      if (other.hasRequestBuilder()) {
        this.requestBuilder = com.madhouse.madmax.avro.MediaRequest.newBuilder(other.getRequestBuilder());
      }
      if (isValidValue(fields()[5], other.response)) {
        this.response = data().deepCopy(fields()[5].schema(), other.response);
        fieldSetFlags()[5] = true;
      }
      if (other.hasResponseBuilder()) {
        this.responseBuilder = com.madhouse.madmax.avro.MediaResponse.newBuilder(other.getResponseBuilder());
      }
    }

    /**
     * Creates a Builder by copying an existing MediaBid instance
     * @param other The existing instance to copy.
     */
    private Builder(MediaBid other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.status)) {
        this.status = data().deepCopy(fields()[0].schema(), other.status);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ip)) {
        this.ip = data().deepCopy(fields()[1].schema(), other.ip);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.impid)) {
        this.impid = data().deepCopy(fields()[2].schema(), other.impid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.ts)) {
        this.ts = data().deepCopy(fields()[3].schema(), other.ts);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.request)) {
        this.request = data().deepCopy(fields()[4].schema(), other.request);
        fieldSetFlags()[4] = true;
      }
      this.requestBuilder = null;
      if (isValidValue(fields()[5], other.response)) {
        this.response = data().deepCopy(fields()[5].schema(), other.response);
        fieldSetFlags()[5] = true;
      }
      this.responseBuilder = null;
    }

    /**
      * Gets the value of the 'status' field.
      * @return The value.
      */
    public Integer getStatus() {
      return status;
    }

    /**
      * Sets the value of the 'status' field.
      * @param value The value of 'status'.
      * @return This builder.
      */
    public Builder setStatus(int value) {
      validate(fields()[0], value);
      this.status = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'status' field has been set.
      * @return True if the 'status' field has been set, false otherwise.
      */
    public boolean hasStatus() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'status' field.
      * @return This builder.
      */
    public Builder clearStatus() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public CharSequence getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public Builder setIp(CharSequence value) {
      validate(fields()[1], value);
      this.ip = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public Builder clearIp() {
      ip = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'impid' field.
      * @return The value.
      */
    public CharSequence getImpid() {
      return impid;
    }

    /**
      * Sets the value of the 'impid' field.
      * @param value The value of 'impid'.
      * @return This builder.
      */
    public Builder setImpid(CharSequence value) {
      validate(fields()[2], value);
      this.impid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'impid' field has been set.
      * @return True if the 'impid' field has been set, false otherwise.
      */
    public boolean hasImpid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'impid' field.
      * @return This builder.
      */
    public Builder clearImpid() {
      impid = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'ts' field.
      * @return The value.
      */
    public Long getTs() {
      return ts;
    }

    /**
      * Sets the value of the 'ts' field.
      * @param value The value of 'ts'.
      * @return This builder.
      */
    public Builder setTs(long value) {
      validate(fields()[3], value);
      this.ts = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'ts' field has been set.
      * @return True if the 'ts' field has been set, false otherwise.
      */
    public boolean hasTs() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'ts' field.
      * @return This builder.
      */
    public Builder clearTs() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'request' field.
      * @return The value.
      */
    public com.madhouse.madmax.avro.MediaRequest getRequest() {
      return request;
    }

    /**
      * Sets the value of the 'request' field.
      * @param value The value of 'request'.
      * @return This builder.
      */
    public Builder setRequest(com.madhouse.madmax.avro.MediaRequest value) {
      validate(fields()[4], value);
      this.requestBuilder = null;
      this.request = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'request' field has been set.
      * @return True if the 'request' field has been set, false otherwise.
      */
    public boolean hasRequest() {
      return fieldSetFlags()[4];
    }

    /**
     * Gets the Builder instance for the 'request' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.madhouse.madmax.avro.MediaRequest.Builder getRequestBuilder() {
      if (requestBuilder == null) {
        if (hasRequest()) {
          setRequestBuilder(com.madhouse.madmax.avro.MediaRequest.newBuilder(request));
        } else {
          setRequestBuilder(com.madhouse.madmax.avro.MediaRequest.newBuilder());
        }
      }
      return requestBuilder;
    }

    /**
     * Sets the Builder instance for the 'request' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setRequestBuilder(com.madhouse.madmax.avro.MediaRequest.Builder value) {
      clearRequest();
      requestBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'request' field has an active Builder instance
     * @return True if the 'request' field has an active Builder instance
     */
    public boolean hasRequestBuilder() {
      return requestBuilder != null;
    }

    /**
      * Clears the value of the 'request' field.
      * @return This builder.
      */
    public Builder clearRequest() {
      request = null;
      requestBuilder = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'response' field.
      * @return The value.
      */
    public com.madhouse.madmax.avro.MediaResponse getResponse() {
      return response;
    }

    /**
      * Sets the value of the 'response' field.
      * @param value The value of 'response'.
      * @return This builder.
      */
    public Builder setResponse(com.madhouse.madmax.avro.MediaResponse value) {
      validate(fields()[5], value);
      this.responseBuilder = null;
      this.response = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'response' field has been set.
      * @return True if the 'response' field has been set, false otherwise.
      */
    public boolean hasResponse() {
      return fieldSetFlags()[5];
    }

    /**
     * Gets the Builder instance for the 'response' field and creates one if it doesn't exist yet.
     * @return This builder.
     */
    public com.madhouse.madmax.avro.MediaResponse.Builder getResponseBuilder() {
      if (responseBuilder == null) {
        if (hasResponse()) {
          setResponseBuilder(com.madhouse.madmax.avro.MediaResponse.newBuilder(response));
        } else {
          setResponseBuilder(com.madhouse.madmax.avro.MediaResponse.newBuilder());
        }
      }
      return responseBuilder;
    }

    /**
     * Sets the Builder instance for the 'response' field
     * @param value The builder instance that must be set.
     * @return This builder.
     */
    public Builder setResponseBuilder(com.madhouse.madmax.avro.MediaResponse.Builder value) {
      clearResponse();
      responseBuilder = value;
      return this;
    }

    /**
     * Checks whether the 'response' field has an active Builder instance
     * @return True if the 'response' field has an active Builder instance
     */
    public boolean hasResponseBuilder() {
      return responseBuilder != null;
    }

    /**
      * Clears the value of the 'response' field.
      * @return This builder.
      */
    public Builder clearResponse() {
      response = null;
      responseBuilder = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MediaBid build() {
      try {
        MediaBid record = new MediaBid();
        record.status = fieldSetFlags()[0] ? this.status : (Integer) defaultValue(fields()[0]);
        record.ip = fieldSetFlags()[1] ? this.ip : (CharSequence) defaultValue(fields()[1]);
        record.impid = fieldSetFlags()[2] ? this.impid : (CharSequence) defaultValue(fields()[2]);
        record.ts = fieldSetFlags()[3] ? this.ts : (Long) defaultValue(fields()[3]);
        if (requestBuilder != null) {
          record.request = this.requestBuilder.build();
        } else {
          record.request = fieldSetFlags()[4] ? this.request : (com.madhouse.madmax.avro.MediaRequest) defaultValue(fields()[4]);
        }
        if (responseBuilder != null) {
          record.response = this.responseBuilder.build();
        } else {
          record.response = fieldSetFlags()[5] ? this.response : (com.madhouse.madmax.avro.MediaResponse) defaultValue(fields()[5]);
        }
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MediaBid>
    WRITER$ = (org.apache.avro.io.DatumWriter<MediaBid>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MediaBid>
    READER$ = (org.apache.avro.io.DatumReader<MediaBid>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
