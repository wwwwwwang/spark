/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package com.madhouse.madmax.avro;

import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.SchemaStore;
import org.apache.avro.specific.SpecificData;

@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MediaRequest extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -5036264192939804661L;
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MediaRequest\",\"namespace\":\"com.madhouse.madmax.avro\",\"fields\":[{\"name\":\"bid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"sspid\",\"type\":\"long\"},{\"name\":\"mediaid\",\"type\":\"long\"},{\"name\":\"adspaceid\",\"type\":\"long\"},{\"name\":\"adtype\",\"type\":\"int\"},{\"name\":\"pkgname\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"appname\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"connectiontype\",\"type\":\"int\",\"default\":0},{\"name\":\"carrier\",\"type\":\"int\",\"default\":0},{\"name\":\"os\",\"type\":\"int\",\"default\":0},{\"name\":\"osv\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"did\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"didmd5\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"dpid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"dpidmd5\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"mac\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"macmd5\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ifa\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"device\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"devicetype\",\"type\":\"int\",\"default\":0},{\"name\":\"ua\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"ip\",\"type\":\"string\"},{\"name\":\"location\",\"type\":\"string\",\"default\":\"1000000000\"},{\"name\":\"w\",\"type\":\"int\"},{\"name\":\"h\",\"type\":\"int\"},{\"name\":\"pid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"pcat\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"media\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"density\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"dealid\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"mcell\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"label\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"lat\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"lon\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"make\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"model\",\"type\":\"string\",\"default\":\"\"},{\"name\":\"test\",\"type\":\"int\",\"default\":0},{\"name\":\"bidtype\",\"type\":\"int\",\"default\":1},{\"name\":\"bidfloor\",\"type\":\"int\",\"default\":0}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<MediaRequest> ENCODER =
      new BinaryMessageEncoder<MediaRequest>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<MediaRequest> DECODER =
      new BinaryMessageDecoder<MediaRequest>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   */
  public static BinaryMessageDecoder<MediaRequest> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   */
  public static BinaryMessageDecoder<MediaRequest> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<MediaRequest>(MODEL$, SCHEMA$, resolver);
  }

  /** Serializes this MediaRequest to a ByteBuffer. */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /** Deserializes a MediaRequest from a ByteBuffer. */
  public static MediaRequest fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  @Deprecated public CharSequence bid;
  @Deprecated public long sspid;
  @Deprecated public long mediaid;
  @Deprecated public long adspaceid;
  @Deprecated public int adtype;
  @Deprecated public CharSequence pkgname;
  @Deprecated public CharSequence appname;
  @Deprecated public int connectiontype;
  @Deprecated public int carrier;
  @Deprecated public int os;
  @Deprecated public CharSequence osv;
  @Deprecated public CharSequence did;
  @Deprecated public CharSequence didmd5;
  @Deprecated public CharSequence dpid;
  @Deprecated public CharSequence dpidmd5;
  @Deprecated public CharSequence mac;
  @Deprecated public CharSequence macmd5;
  @Deprecated public CharSequence ifa;
  @Deprecated public CharSequence device;
  @Deprecated public int devicetype;
  @Deprecated public CharSequence ua;
  @Deprecated public CharSequence ip;
  @Deprecated public CharSequence location;
  @Deprecated public int w;
  @Deprecated public int h;
  @Deprecated public CharSequence pid;
  @Deprecated public CharSequence pcat;
  @Deprecated public CharSequence media;
  @Deprecated public CharSequence density;
  @Deprecated public CharSequence dealid;
  @Deprecated public CharSequence mcell;
  @Deprecated public CharSequence label;
  @Deprecated public CharSequence lat;
  @Deprecated public CharSequence lon;
  @Deprecated public CharSequence make;
  @Deprecated public CharSequence model;
  @Deprecated public int test;
  @Deprecated public int bidtype;
  @Deprecated public int bidfloor;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public MediaRequest() {}

  /**
   * All-args constructor.
   * @param bid The new value for bid
   * @param sspid The new value for sspid
   * @param mediaid The new value for mediaid
   * @param adspaceid The new value for adspaceid
   * @param adtype The new value for adtype
   * @param pkgname The new value for pkgname
   * @param appname The new value for appname
   * @param connectiontype The new value for connectiontype
   * @param carrier The new value for carrier
   * @param os The new value for os
   * @param osv The new value for osv
   * @param did The new value for did
   * @param didmd5 The new value for didmd5
   * @param dpid The new value for dpid
   * @param dpidmd5 The new value for dpidmd5
   * @param mac The new value for mac
   * @param macmd5 The new value for macmd5
   * @param ifa The new value for ifa
   * @param device The new value for device
   * @param devicetype The new value for devicetype
   * @param ua The new value for ua
   * @param ip The new value for ip
   * @param location The new value for location
   * @param w The new value for w
   * @param h The new value for h
   * @param pid The new value for pid
   * @param pcat The new value for pcat
   * @param media The new value for media
   * @param density The new value for density
   * @param dealid The new value for dealid
   * @param mcell The new value for mcell
   * @param label The new value for label
   * @param lat The new value for lat
   * @param lon The new value for lon
   * @param make The new value for make
   * @param model The new value for model
   * @param test The new value for test
   * @param bidtype The new value for bidtype
   * @param bidfloor The new value for bidfloor
   */
  public MediaRequest(CharSequence bid, Long sspid, Long mediaid, Long adspaceid, Integer adtype, CharSequence pkgname, CharSequence appname, Integer connectiontype, Integer carrier, Integer os, CharSequence osv, CharSequence did, CharSequence didmd5, CharSequence dpid, CharSequence dpidmd5, CharSequence mac, CharSequence macmd5, CharSequence ifa, CharSequence device, Integer devicetype, CharSequence ua, CharSequence ip, CharSequence location, Integer w, Integer h, CharSequence pid, CharSequence pcat, CharSequence media, CharSequence density, CharSequence dealid, CharSequence mcell, CharSequence label, CharSequence lat, CharSequence lon, CharSequence make, CharSequence model, Integer test, Integer bidtype, Integer bidfloor) {
    this.bid = bid;
    this.sspid = sspid;
    this.mediaid = mediaid;
    this.adspaceid = adspaceid;
    this.adtype = adtype;
    this.pkgname = pkgname;
    this.appname = appname;
    this.connectiontype = connectiontype;
    this.carrier = carrier;
    this.os = os;
    this.osv = osv;
    this.did = did;
    this.didmd5 = didmd5;
    this.dpid = dpid;
    this.dpidmd5 = dpidmd5;
    this.mac = mac;
    this.macmd5 = macmd5;
    this.ifa = ifa;
    this.device = device;
    this.devicetype = devicetype;
    this.ua = ua;
    this.ip = ip;
    this.location = location;
    this.w = w;
    this.h = h;
    this.pid = pid;
    this.pcat = pcat;
    this.media = media;
    this.density = density;
    this.dealid = dealid;
    this.mcell = mcell;
    this.label = label;
    this.lat = lat;
    this.lon = lon;
    this.make = make;
    this.model = model;
    this.test = test;
    this.bidtype = bidtype;
    this.bidfloor = bidfloor;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public Object get(int field$) {
    switch (field$) {
    case 0: return bid;
    case 1: return sspid;
    case 2: return mediaid;
    case 3: return adspaceid;
    case 4: return adtype;
    case 5: return pkgname;
    case 6: return appname;
    case 7: return connectiontype;
    case 8: return carrier;
    case 9: return os;
    case 10: return osv;
    case 11: return did;
    case 12: return didmd5;
    case 13: return dpid;
    case 14: return dpidmd5;
    case 15: return mac;
    case 16: return macmd5;
    case 17: return ifa;
    case 18: return device;
    case 19: return devicetype;
    case 20: return ua;
    case 21: return ip;
    case 22: return location;
    case 23: return w;
    case 24: return h;
    case 25: return pid;
    case 26: return pcat;
    case 27: return media;
    case 28: return density;
    case 29: return dealid;
    case 30: return mcell;
    case 31: return label;
    case 32: return lat;
    case 33: return lon;
    case 34: return make;
    case 35: return model;
    case 36: return test;
    case 37: return bidtype;
    case 38: return bidfloor;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  // Used by DatumReader.  Applications should not call.
  @SuppressWarnings(value="unchecked")
  public void put(int field$, Object value$) {
    switch (field$) {
    case 0: bid = (CharSequence)value$; break;
    case 1: sspid = (Long)value$; break;
    case 2: mediaid = (Long)value$; break;
    case 3: adspaceid = (Long)value$; break;
    case 4: adtype = (Integer)value$; break;
    case 5: pkgname = (CharSequence)value$; break;
    case 6: appname = (CharSequence)value$; break;
    case 7: connectiontype = (Integer)value$; break;
    case 8: carrier = (Integer)value$; break;
    case 9: os = (Integer)value$; break;
    case 10: osv = (CharSequence)value$; break;
    case 11: did = (CharSequence)value$; break;
    case 12: didmd5 = (CharSequence)value$; break;
    case 13: dpid = (CharSequence)value$; break;
    case 14: dpidmd5 = (CharSequence)value$; break;
    case 15: mac = (CharSequence)value$; break;
    case 16: macmd5 = (CharSequence)value$; break;
    case 17: ifa = (CharSequence)value$; break;
    case 18: device = (CharSequence)value$; break;
    case 19: devicetype = (Integer)value$; break;
    case 20: ua = (CharSequence)value$; break;
    case 21: ip = (CharSequence)value$; break;
    case 22: location = (CharSequence)value$; break;
    case 23: w = (Integer)value$; break;
    case 24: h = (Integer)value$; break;
    case 25: pid = (CharSequence)value$; break;
    case 26: pcat = (CharSequence)value$; break;
    case 27: media = (CharSequence)value$; break;
    case 28: density = (CharSequence)value$; break;
    case 29: dealid = (CharSequence)value$; break;
    case 30: mcell = (CharSequence)value$; break;
    case 31: label = (CharSequence)value$; break;
    case 32: lat = (CharSequence)value$; break;
    case 33: lon = (CharSequence)value$; break;
    case 34: make = (CharSequence)value$; break;
    case 35: model = (CharSequence)value$; break;
    case 36: test = (Integer)value$; break;
    case 37: bidtype = (Integer)value$; break;
    case 38: bidfloor = (Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'bid' field.
   * @return The value of the 'bid' field.
   */
  public CharSequence getBid() {
    return bid;
  }

  /**
   * Sets the value of the 'bid' field.
   * @param value the value to set.
   */
  public void setBid(CharSequence value) {
    this.bid = value;
  }

  /**
   * Gets the value of the 'sspid' field.
   * @return The value of the 'sspid' field.
   */
  public Long getSspid() {
    return sspid;
  }

  /**
   * Sets the value of the 'sspid' field.
   * @param value the value to set.
   */
  public void setSspid(Long value) {
    this.sspid = value;
  }

  /**
   * Gets the value of the 'mediaid' field.
   * @return The value of the 'mediaid' field.
   */
  public Long getMediaid() {
    return mediaid;
  }

  /**
   * Sets the value of the 'mediaid' field.
   * @param value the value to set.
   */
  public void setMediaid(Long value) {
    this.mediaid = value;
  }

  /**
   * Gets the value of the 'adspaceid' field.
   * @return The value of the 'adspaceid' field.
   */
  public Long getAdspaceid() {
    return adspaceid;
  }

  /**
   * Sets the value of the 'adspaceid' field.
   * @param value the value to set.
   */
  public void setAdspaceid(Long value) {
    this.adspaceid = value;
  }

  /**
   * Gets the value of the 'adtype' field.
   * @return The value of the 'adtype' field.
   */
  public Integer getAdtype() {
    return adtype;
  }

  /**
   * Sets the value of the 'adtype' field.
   * @param value the value to set.
   */
  public void setAdtype(Integer value) {
    this.adtype = value;
  }

  /**
   * Gets the value of the 'pkgname' field.
   * @return The value of the 'pkgname' field.
   */
  public CharSequence getPkgname() {
    return pkgname;
  }

  /**
   * Sets the value of the 'pkgname' field.
   * @param value the value to set.
   */
  public void setPkgname(CharSequence value) {
    this.pkgname = value;
  }

  /**
   * Gets the value of the 'appname' field.
   * @return The value of the 'appname' field.
   */
  public CharSequence getAppname() {
    return appname;
  }

  /**
   * Sets the value of the 'appname' field.
   * @param value the value to set.
   */
  public void setAppname(CharSequence value) {
    this.appname = value;
  }

  /**
   * Gets the value of the 'connectiontype' field.
   * @return The value of the 'connectiontype' field.
   */
  public Integer getConnectiontype() {
    return connectiontype;
  }

  /**
   * Sets the value of the 'connectiontype' field.
   * @param value the value to set.
   */
  public void setConnectiontype(Integer value) {
    this.connectiontype = value;
  }

  /**
   * Gets the value of the 'carrier' field.
   * @return The value of the 'carrier' field.
   */
  public Integer getCarrier() {
    return carrier;
  }

  /**
   * Sets the value of the 'carrier' field.
   * @param value the value to set.
   */
  public void setCarrier(Integer value) {
    this.carrier = value;
  }

  /**
   * Gets the value of the 'os' field.
   * @return The value of the 'os' field.
   */
  public Integer getOs() {
    return os;
  }

  /**
   * Sets the value of the 'os' field.
   * @param value the value to set.
   */
  public void setOs(Integer value) {
    this.os = value;
  }

  /**
   * Gets the value of the 'osv' field.
   * @return The value of the 'osv' field.
   */
  public CharSequence getOsv() {
    return osv;
  }

  /**
   * Sets the value of the 'osv' field.
   * @param value the value to set.
   */
  public void setOsv(CharSequence value) {
    this.osv = value;
  }

  /**
   * Gets the value of the 'did' field.
   * @return The value of the 'did' field.
   */
  public CharSequence getDid() {
    return did;
  }

  /**
   * Sets the value of the 'did' field.
   * @param value the value to set.
   */
  public void setDid(CharSequence value) {
    this.did = value;
  }

  /**
   * Gets the value of the 'didmd5' field.
   * @return The value of the 'didmd5' field.
   */
  public CharSequence getDidmd5() {
    return didmd5;
  }

  /**
   * Sets the value of the 'didmd5' field.
   * @param value the value to set.
   */
  public void setDidmd5(CharSequence value) {
    this.didmd5 = value;
  }

  /**
   * Gets the value of the 'dpid' field.
   * @return The value of the 'dpid' field.
   */
  public CharSequence getDpid() {
    return dpid;
  }

  /**
   * Sets the value of the 'dpid' field.
   * @param value the value to set.
   */
  public void setDpid(CharSequence value) {
    this.dpid = value;
  }

  /**
   * Gets the value of the 'dpidmd5' field.
   * @return The value of the 'dpidmd5' field.
   */
  public CharSequence getDpidmd5() {
    return dpidmd5;
  }

  /**
   * Sets the value of the 'dpidmd5' field.
   * @param value the value to set.
   */
  public void setDpidmd5(CharSequence value) {
    this.dpidmd5 = value;
  }

  /**
   * Gets the value of the 'mac' field.
   * @return The value of the 'mac' field.
   */
  public CharSequence getMac() {
    return mac;
  }

  /**
   * Sets the value of the 'mac' field.
   * @param value the value to set.
   */
  public void setMac(CharSequence value) {
    this.mac = value;
  }

  /**
   * Gets the value of the 'macmd5' field.
   * @return The value of the 'macmd5' field.
   */
  public CharSequence getMacmd5() {
    return macmd5;
  }

  /**
   * Sets the value of the 'macmd5' field.
   * @param value the value to set.
   */
  public void setMacmd5(CharSequence value) {
    this.macmd5 = value;
  }

  /**
   * Gets the value of the 'ifa' field.
   * @return The value of the 'ifa' field.
   */
  public CharSequence getIfa() {
    return ifa;
  }

  /**
   * Sets the value of the 'ifa' field.
   * @param value the value to set.
   */
  public void setIfa(CharSequence value) {
    this.ifa = value;
  }

  /**
   * Gets the value of the 'device' field.
   * @return The value of the 'device' field.
   */
  public CharSequence getDevice() {
    return device;
  }

  /**
   * Sets the value of the 'device' field.
   * @param value the value to set.
   */
  public void setDevice(CharSequence value) {
    this.device = value;
  }

  /**
   * Gets the value of the 'devicetype' field.
   * @return The value of the 'devicetype' field.
   */
  public Integer getDevicetype() {
    return devicetype;
  }

  /**
   * Sets the value of the 'devicetype' field.
   * @param value the value to set.
   */
  public void setDevicetype(Integer value) {
    this.devicetype = value;
  }

  /**
   * Gets the value of the 'ua' field.
   * @return The value of the 'ua' field.
   */
  public CharSequence getUa() {
    return ua;
  }

  /**
   * Sets the value of the 'ua' field.
   * @param value the value to set.
   */
  public void setUa(CharSequence value) {
    this.ua = value;
  }

  /**
   * Gets the value of the 'ip' field.
   * @return The value of the 'ip' field.
   */
  public CharSequence getIp() {
    return ip;
  }

  /**
   * Sets the value of the 'ip' field.
   * @param value the value to set.
   */
  public void setIp(CharSequence value) {
    this.ip = value;
  }

  /**
   * Gets the value of the 'location' field.
   * @return The value of the 'location' field.
   */
  public CharSequence getLocation() {
    return location;
  }

  /**
   * Sets the value of the 'location' field.
   * @param value the value to set.
   */
  public void setLocation(CharSequence value) {
    this.location = value;
  }

  /**
   * Gets the value of the 'w' field.
   * @return The value of the 'w' field.
   */
  public Integer getW() {
    return w;
  }

  /**
   * Sets the value of the 'w' field.
   * @param value the value to set.
   */
  public void setW(Integer value) {
    this.w = value;
  }

  /**
   * Gets the value of the 'h' field.
   * @return The value of the 'h' field.
   */
  public Integer getH() {
    return h;
  }

  /**
   * Sets the value of the 'h' field.
   * @param value the value to set.
   */
  public void setH(Integer value) {
    this.h = value;
  }

  /**
   * Gets the value of the 'pid' field.
   * @return The value of the 'pid' field.
   */
  public CharSequence getPid() {
    return pid;
  }

  /**
   * Sets the value of the 'pid' field.
   * @param value the value to set.
   */
  public void setPid(CharSequence value) {
    this.pid = value;
  }

  /**
   * Gets the value of the 'pcat' field.
   * @return The value of the 'pcat' field.
   */
  public CharSequence getPcat() {
    return pcat;
  }

  /**
   * Sets the value of the 'pcat' field.
   * @param value the value to set.
   */
  public void setPcat(CharSequence value) {
    this.pcat = value;
  }

  /**
   * Gets the value of the 'media' field.
   * @return The value of the 'media' field.
   */
  public CharSequence getMedia() {
    return media;
  }

  /**
   * Sets the value of the 'media' field.
   * @param value the value to set.
   */
  public void setMedia(CharSequence value) {
    this.media = value;
  }

  /**
   * Gets the value of the 'density' field.
   * @return The value of the 'density' field.
   */
  public CharSequence getDensity() {
    return density;
  }

  /**
   * Sets the value of the 'density' field.
   * @param value the value to set.
   */
  public void setDensity(CharSequence value) {
    this.density = value;
  }

  /**
   * Gets the value of the 'dealid' field.
   * @return The value of the 'dealid' field.
   */
  public CharSequence getDealid() {
    return dealid;
  }

  /**
   * Sets the value of the 'dealid' field.
   * @param value the value to set.
   */
  public void setDealid(CharSequence value) {
    this.dealid = value;
  }

  /**
   * Gets the value of the 'mcell' field.
   * @return The value of the 'mcell' field.
   */
  public CharSequence getMcell() {
    return mcell;
  }

  /**
   * Sets the value of the 'mcell' field.
   * @param value the value to set.
   */
  public void setMcell(CharSequence value) {
    this.mcell = value;
  }

  /**
   * Gets the value of the 'label' field.
   * @return The value of the 'label' field.
   */
  public CharSequence getLabel() {
    return label;
  }

  /**
   * Sets the value of the 'label' field.
   * @param value the value to set.
   */
  public void setLabel(CharSequence value) {
    this.label = value;
  }

  /**
   * Gets the value of the 'lat' field.
   * @return The value of the 'lat' field.
   */
  public CharSequence getLat() {
    return lat;
  }

  /**
   * Sets the value of the 'lat' field.
   * @param value the value to set.
   */
  public void setLat(CharSequence value) {
    this.lat = value;
  }

  /**
   * Gets the value of the 'lon' field.
   * @return The value of the 'lon' field.
   */
  public CharSequence getLon() {
    return lon;
  }

  /**
   * Sets the value of the 'lon' field.
   * @param value the value to set.
   */
  public void setLon(CharSequence value) {
    this.lon = value;
  }

  /**
   * Gets the value of the 'make' field.
   * @return The value of the 'make' field.
   */
  public CharSequence getMake() {
    return make;
  }

  /**
   * Sets the value of the 'make' field.
   * @param value the value to set.
   */
  public void setMake(CharSequence value) {
    this.make = value;
  }

  /**
   * Gets the value of the 'model' field.
   * @return The value of the 'model' field.
   */
  public CharSequence getModel() {
    return model;
  }

  /**
   * Sets the value of the 'model' field.
   * @param value the value to set.
   */
  public void setModel(CharSequence value) {
    this.model = value;
  }

  /**
   * Gets the value of the 'test' field.
   * @return The value of the 'test' field.
   */
  public Integer getTest() {
    return test;
  }

  /**
   * Sets the value of the 'test' field.
   * @param value the value to set.
   */
  public void setTest(Integer value) {
    this.test = value;
  }

  /**
   * Gets the value of the 'bidtype' field.
   * @return The value of the 'bidtype' field.
   */
  public Integer getBidtype() {
    return bidtype;
  }

  /**
   * Sets the value of the 'bidtype' field.
   * @param value the value to set.
   */
  public void setBidtype(Integer value) {
    this.bidtype = value;
  }

  /**
   * Gets the value of the 'bidfloor' field.
   * @return The value of the 'bidfloor' field.
   */
  public Integer getBidfloor() {
    return bidfloor;
  }

  /**
   * Sets the value of the 'bidfloor' field.
   * @param value the value to set.
   */
  public void setBidfloor(Integer value) {
    this.bidfloor = value;
  }

  /**
   * Creates a new MediaRequest RecordBuilder.
   * @return A new MediaRequest RecordBuilder
   */
  public static Builder newBuilder() {
    return new Builder();
  }

  /**
   * Creates a new MediaRequest RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new MediaRequest RecordBuilder
   */
  public static Builder newBuilder(Builder other) {
    return new Builder(other);
  }

  /**
   * Creates a new MediaRequest RecordBuilder by copying an existing MediaRequest instance.
   * @param other The existing instance to copy.
   * @return A new MediaRequest RecordBuilder
   */
  public static Builder newBuilder(MediaRequest other) {
    return new Builder(other);
  }

  /**
   * RecordBuilder for MediaRequest instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MediaRequest>
    implements org.apache.avro.data.RecordBuilder<MediaRequest> {

    private CharSequence bid;
    private long sspid;
    private long mediaid;
    private long adspaceid;
    private int adtype;
    private CharSequence pkgname;
    private CharSequence appname;
    private int connectiontype;
    private int carrier;
    private int os;
    private CharSequence osv;
    private CharSequence did;
    private CharSequence didmd5;
    private CharSequence dpid;
    private CharSequence dpidmd5;
    private CharSequence mac;
    private CharSequence macmd5;
    private CharSequence ifa;
    private CharSequence device;
    private int devicetype;
    private CharSequence ua;
    private CharSequence ip;
    private CharSequence location;
    private int w;
    private int h;
    private CharSequence pid;
    private CharSequence pcat;
    private CharSequence media;
    private CharSequence density;
    private CharSequence dealid;
    private CharSequence mcell;
    private CharSequence label;
    private CharSequence lat;
    private CharSequence lon;
    private CharSequence make;
    private CharSequence model;
    private int test;
    private int bidtype;
    private int bidfloor;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.bid)) {
        this.bid = data().deepCopy(fields()[0].schema(), other.bid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sspid)) {
        this.sspid = data().deepCopy(fields()[1].schema(), other.sspid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mediaid)) {
        this.mediaid = data().deepCopy(fields()[2].schema(), other.mediaid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.adspaceid)) {
        this.adspaceid = data().deepCopy(fields()[3].schema(), other.adspaceid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.adtype)) {
        this.adtype = data().deepCopy(fields()[4].schema(), other.adtype);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pkgname)) {
        this.pkgname = data().deepCopy(fields()[5].schema(), other.pkgname);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.appname)) {
        this.appname = data().deepCopy(fields()[6].schema(), other.appname);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.connectiontype)) {
        this.connectiontype = data().deepCopy(fields()[7].schema(), other.connectiontype);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.carrier)) {
        this.carrier = data().deepCopy(fields()[8].schema(), other.carrier);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.os)) {
        this.os = data().deepCopy(fields()[9].schema(), other.os);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.osv)) {
        this.osv = data().deepCopy(fields()[10].schema(), other.osv);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.did)) {
        this.did = data().deepCopy(fields()[11].schema(), other.did);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.didmd5)) {
        this.didmd5 = data().deepCopy(fields()[12].schema(), other.didmd5);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.dpid)) {
        this.dpid = data().deepCopy(fields()[13].schema(), other.dpid);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.dpidmd5)) {
        this.dpidmd5 = data().deepCopy(fields()[14].schema(), other.dpidmd5);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.mac)) {
        this.mac = data().deepCopy(fields()[15].schema(), other.mac);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.macmd5)) {
        this.macmd5 = data().deepCopy(fields()[16].schema(), other.macmd5);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.ifa)) {
        this.ifa = data().deepCopy(fields()[17].schema(), other.ifa);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.device)) {
        this.device = data().deepCopy(fields()[18].schema(), other.device);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.devicetype)) {
        this.devicetype = data().deepCopy(fields()[19].schema(), other.devicetype);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.ua)) {
        this.ua = data().deepCopy(fields()[20].schema(), other.ua);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.ip)) {
        this.ip = data().deepCopy(fields()[21].schema(), other.ip);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.location)) {
        this.location = data().deepCopy(fields()[22].schema(), other.location);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.w)) {
        this.w = data().deepCopy(fields()[23].schema(), other.w);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.h)) {
        this.h = data().deepCopy(fields()[24].schema(), other.h);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.pid)) {
        this.pid = data().deepCopy(fields()[25].schema(), other.pid);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.pcat)) {
        this.pcat = data().deepCopy(fields()[26].schema(), other.pcat);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.media)) {
        this.media = data().deepCopy(fields()[27].schema(), other.media);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.density)) {
        this.density = data().deepCopy(fields()[28].schema(), other.density);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.dealid)) {
        this.dealid = data().deepCopy(fields()[29].schema(), other.dealid);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.mcell)) {
        this.mcell = data().deepCopy(fields()[30].schema(), other.mcell);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.label)) {
        this.label = data().deepCopy(fields()[31].schema(), other.label);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.lat)) {
        this.lat = data().deepCopy(fields()[32].schema(), other.lat);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.lon)) {
        this.lon = data().deepCopy(fields()[33].schema(), other.lon);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.make)) {
        this.make = data().deepCopy(fields()[34].schema(), other.make);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.model)) {
        this.model = data().deepCopy(fields()[35].schema(), other.model);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.test)) {
        this.test = data().deepCopy(fields()[36].schema(), other.test);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.bidtype)) {
        this.bidtype = data().deepCopy(fields()[37].schema(), other.bidtype);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.bidfloor)) {
        this.bidfloor = data().deepCopy(fields()[38].schema(), other.bidfloor);
        fieldSetFlags()[38] = true;
      }
    }

    /**
     * Creates a Builder by copying an existing MediaRequest instance
     * @param other The existing instance to copy.
     */
    private Builder(MediaRequest other) {
            super(SCHEMA$);
      if (isValidValue(fields()[0], other.bid)) {
        this.bid = data().deepCopy(fields()[0].schema(), other.bid);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sspid)) {
        this.sspid = data().deepCopy(fields()[1].schema(), other.sspid);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.mediaid)) {
        this.mediaid = data().deepCopy(fields()[2].schema(), other.mediaid);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.adspaceid)) {
        this.adspaceid = data().deepCopy(fields()[3].schema(), other.adspaceid);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.adtype)) {
        this.adtype = data().deepCopy(fields()[4].schema(), other.adtype);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.pkgname)) {
        this.pkgname = data().deepCopy(fields()[5].schema(), other.pkgname);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.appname)) {
        this.appname = data().deepCopy(fields()[6].schema(), other.appname);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.connectiontype)) {
        this.connectiontype = data().deepCopy(fields()[7].schema(), other.connectiontype);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.carrier)) {
        this.carrier = data().deepCopy(fields()[8].schema(), other.carrier);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.os)) {
        this.os = data().deepCopy(fields()[9].schema(), other.os);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.osv)) {
        this.osv = data().deepCopy(fields()[10].schema(), other.osv);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.did)) {
        this.did = data().deepCopy(fields()[11].schema(), other.did);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.didmd5)) {
        this.didmd5 = data().deepCopy(fields()[12].schema(), other.didmd5);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.dpid)) {
        this.dpid = data().deepCopy(fields()[13].schema(), other.dpid);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.dpidmd5)) {
        this.dpidmd5 = data().deepCopy(fields()[14].schema(), other.dpidmd5);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.mac)) {
        this.mac = data().deepCopy(fields()[15].schema(), other.mac);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.macmd5)) {
        this.macmd5 = data().deepCopy(fields()[16].schema(), other.macmd5);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.ifa)) {
        this.ifa = data().deepCopy(fields()[17].schema(), other.ifa);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.device)) {
        this.device = data().deepCopy(fields()[18].schema(), other.device);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.devicetype)) {
        this.devicetype = data().deepCopy(fields()[19].schema(), other.devicetype);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.ua)) {
        this.ua = data().deepCopy(fields()[20].schema(), other.ua);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.ip)) {
        this.ip = data().deepCopy(fields()[21].schema(), other.ip);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.location)) {
        this.location = data().deepCopy(fields()[22].schema(), other.location);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.w)) {
        this.w = data().deepCopy(fields()[23].schema(), other.w);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.h)) {
        this.h = data().deepCopy(fields()[24].schema(), other.h);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.pid)) {
        this.pid = data().deepCopy(fields()[25].schema(), other.pid);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.pcat)) {
        this.pcat = data().deepCopy(fields()[26].schema(), other.pcat);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.media)) {
        this.media = data().deepCopy(fields()[27].schema(), other.media);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.density)) {
        this.density = data().deepCopy(fields()[28].schema(), other.density);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.dealid)) {
        this.dealid = data().deepCopy(fields()[29].schema(), other.dealid);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.mcell)) {
        this.mcell = data().deepCopy(fields()[30].schema(), other.mcell);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.label)) {
        this.label = data().deepCopy(fields()[31].schema(), other.label);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.lat)) {
        this.lat = data().deepCopy(fields()[32].schema(), other.lat);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.lon)) {
        this.lon = data().deepCopy(fields()[33].schema(), other.lon);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.make)) {
        this.make = data().deepCopy(fields()[34].schema(), other.make);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.model)) {
        this.model = data().deepCopy(fields()[35].schema(), other.model);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.test)) {
        this.test = data().deepCopy(fields()[36].schema(), other.test);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.bidtype)) {
        this.bidtype = data().deepCopy(fields()[37].schema(), other.bidtype);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.bidfloor)) {
        this.bidfloor = data().deepCopy(fields()[38].schema(), other.bidfloor);
        fieldSetFlags()[38] = true;
      }
    }

    /**
      * Gets the value of the 'bid' field.
      * @return The value.
      */
    public CharSequence getBid() {
      return bid;
    }

    /**
      * Sets the value of the 'bid' field.
      * @param value The value of 'bid'.
      * @return This builder.
      */
    public Builder setBid(CharSequence value) {
      validate(fields()[0], value);
      this.bid = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'bid' field has been set.
      * @return True if the 'bid' field has been set, false otherwise.
      */
    public boolean hasBid() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'bid' field.
      * @return This builder.
      */
    public Builder clearBid() {
      bid = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sspid' field.
      * @return The value.
      */
    public Long getSspid() {
      return sspid;
    }

    /**
      * Sets the value of the 'sspid' field.
      * @param value The value of 'sspid'.
      * @return This builder.
      */
    public Builder setSspid(long value) {
      validate(fields()[1], value);
      this.sspid = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sspid' field has been set.
      * @return True if the 'sspid' field has been set, false otherwise.
      */
    public boolean hasSspid() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sspid' field.
      * @return This builder.
      */
    public Builder clearSspid() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'mediaid' field.
      * @return The value.
      */
    public Long getMediaid() {
      return mediaid;
    }

    /**
      * Sets the value of the 'mediaid' field.
      * @param value The value of 'mediaid'.
      * @return This builder.
      */
    public Builder setMediaid(long value) {
      validate(fields()[2], value);
      this.mediaid = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'mediaid' field has been set.
      * @return True if the 'mediaid' field has been set, false otherwise.
      */
    public boolean hasMediaid() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'mediaid' field.
      * @return This builder.
      */
    public Builder clearMediaid() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'adspaceid' field.
      * @return The value.
      */
    public Long getAdspaceid() {
      return adspaceid;
    }

    /**
      * Sets the value of the 'adspaceid' field.
      * @param value The value of 'adspaceid'.
      * @return This builder.
      */
    public Builder setAdspaceid(long value) {
      validate(fields()[3], value);
      this.adspaceid = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'adspaceid' field has been set.
      * @return True if the 'adspaceid' field has been set, false otherwise.
      */
    public boolean hasAdspaceid() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'adspaceid' field.
      * @return This builder.
      */
    public Builder clearAdspaceid() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'adtype' field.
      * @return The value.
      */
    public Integer getAdtype() {
      return adtype;
    }

    /**
      * Sets the value of the 'adtype' field.
      * @param value The value of 'adtype'.
      * @return This builder.
      */
    public Builder setAdtype(int value) {
      validate(fields()[4], value);
      this.adtype = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'adtype' field has been set.
      * @return True if the 'adtype' field has been set, false otherwise.
      */
    public boolean hasAdtype() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'adtype' field.
      * @return This builder.
      */
    public Builder clearAdtype() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'pkgname' field.
      * @return The value.
      */
    public CharSequence getPkgname() {
      return pkgname;
    }

    /**
      * Sets the value of the 'pkgname' field.
      * @param value The value of 'pkgname'.
      * @return This builder.
      */
    public Builder setPkgname(CharSequence value) {
      validate(fields()[5], value);
      this.pkgname = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'pkgname' field has been set.
      * @return True if the 'pkgname' field has been set, false otherwise.
      */
    public boolean hasPkgname() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'pkgname' field.
      * @return This builder.
      */
    public Builder clearPkgname() {
      pkgname = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'appname' field.
      * @return The value.
      */
    public CharSequence getAppname() {
      return appname;
    }

    /**
      * Sets the value of the 'appname' field.
      * @param value The value of 'appname'.
      * @return This builder.
      */
    public Builder setAppname(CharSequence value) {
      validate(fields()[6], value);
      this.appname = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'appname' field has been set.
      * @return True if the 'appname' field has been set, false otherwise.
      */
    public boolean hasAppname() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'appname' field.
      * @return This builder.
      */
    public Builder clearAppname() {
      appname = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'connectiontype' field.
      * @return The value.
      */
    public Integer getConnectiontype() {
      return connectiontype;
    }

    /**
      * Sets the value of the 'connectiontype' field.
      * @param value The value of 'connectiontype'.
      * @return This builder.
      */
    public Builder setConnectiontype(int value) {
      validate(fields()[7], value);
      this.connectiontype = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'connectiontype' field has been set.
      * @return True if the 'connectiontype' field has been set, false otherwise.
      */
    public boolean hasConnectiontype() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'connectiontype' field.
      * @return This builder.
      */
    public Builder clearConnectiontype() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'carrier' field.
      * @return The value.
      */
    public Integer getCarrier() {
      return carrier;
    }

    /**
      * Sets the value of the 'carrier' field.
      * @param value The value of 'carrier'.
      * @return This builder.
      */
    public Builder setCarrier(int value) {
      validate(fields()[8], value);
      this.carrier = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'carrier' field has been set.
      * @return True if the 'carrier' field has been set, false otherwise.
      */
    public boolean hasCarrier() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'carrier' field.
      * @return This builder.
      */
    public Builder clearCarrier() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'os' field.
      * @return The value.
      */
    public Integer getOs() {
      return os;
    }

    /**
      * Sets the value of the 'os' field.
      * @param value The value of 'os'.
      * @return This builder.
      */
    public Builder setOs(int value) {
      validate(fields()[9], value);
      this.os = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'os' field has been set.
      * @return True if the 'os' field has been set, false otherwise.
      */
    public boolean hasOs() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'os' field.
      * @return This builder.
      */
    public Builder clearOs() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'osv' field.
      * @return The value.
      */
    public CharSequence getOsv() {
      return osv;
    }

    /**
      * Sets the value of the 'osv' field.
      * @param value The value of 'osv'.
      * @return This builder.
      */
    public Builder setOsv(CharSequence value) {
      validate(fields()[10], value);
      this.osv = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'osv' field has been set.
      * @return True if the 'osv' field has been set, false otherwise.
      */
    public boolean hasOsv() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'osv' field.
      * @return This builder.
      */
    public Builder clearOsv() {
      osv = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'did' field.
      * @return The value.
      */
    public CharSequence getDid() {
      return did;
    }

    /**
      * Sets the value of the 'did' field.
      * @param value The value of 'did'.
      * @return This builder.
      */
    public Builder setDid(CharSequence value) {
      validate(fields()[11], value);
      this.did = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'did' field has been set.
      * @return True if the 'did' field has been set, false otherwise.
      */
    public boolean hasDid() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'did' field.
      * @return This builder.
      */
    public Builder clearDid() {
      did = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'didmd5' field.
      * @return The value.
      */
    public CharSequence getDidmd5() {
      return didmd5;
    }

    /**
      * Sets the value of the 'didmd5' field.
      * @param value The value of 'didmd5'.
      * @return This builder.
      */
    public Builder setDidmd5(CharSequence value) {
      validate(fields()[12], value);
      this.didmd5 = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'didmd5' field has been set.
      * @return True if the 'didmd5' field has been set, false otherwise.
      */
    public boolean hasDidmd5() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'didmd5' field.
      * @return This builder.
      */
    public Builder clearDidmd5() {
      didmd5 = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'dpid' field.
      * @return The value.
      */
    public CharSequence getDpid() {
      return dpid;
    }

    /**
      * Sets the value of the 'dpid' field.
      * @param value The value of 'dpid'.
      * @return This builder.
      */
    public Builder setDpid(CharSequence value) {
      validate(fields()[13], value);
      this.dpid = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'dpid' field has been set.
      * @return True if the 'dpid' field has been set, false otherwise.
      */
    public boolean hasDpid() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'dpid' field.
      * @return This builder.
      */
    public Builder clearDpid() {
      dpid = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'dpidmd5' field.
      * @return The value.
      */
    public CharSequence getDpidmd5() {
      return dpidmd5;
    }

    /**
      * Sets the value of the 'dpidmd5' field.
      * @param value The value of 'dpidmd5'.
      * @return This builder.
      */
    public Builder setDpidmd5(CharSequence value) {
      validate(fields()[14], value);
      this.dpidmd5 = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'dpidmd5' field has been set.
      * @return True if the 'dpidmd5' field has been set, false otherwise.
      */
    public boolean hasDpidmd5() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'dpidmd5' field.
      * @return This builder.
      */
    public Builder clearDpidmd5() {
      dpidmd5 = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'mac' field.
      * @return The value.
      */
    public CharSequence getMac() {
      return mac;
    }

    /**
      * Sets the value of the 'mac' field.
      * @param value The value of 'mac'.
      * @return This builder.
      */
    public Builder setMac(CharSequence value) {
      validate(fields()[15], value);
      this.mac = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'mac' field has been set.
      * @return True if the 'mac' field has been set, false otherwise.
      */
    public boolean hasMac() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'mac' field.
      * @return This builder.
      */
    public Builder clearMac() {
      mac = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'macmd5' field.
      * @return The value.
      */
    public CharSequence getMacmd5() {
      return macmd5;
    }

    /**
      * Sets the value of the 'macmd5' field.
      * @param value The value of 'macmd5'.
      * @return This builder.
      */
    public Builder setMacmd5(CharSequence value) {
      validate(fields()[16], value);
      this.macmd5 = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'macmd5' field has been set.
      * @return True if the 'macmd5' field has been set, false otherwise.
      */
    public boolean hasMacmd5() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'macmd5' field.
      * @return This builder.
      */
    public Builder clearMacmd5() {
      macmd5 = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'ifa' field.
      * @return The value.
      */
    public CharSequence getIfa() {
      return ifa;
    }

    /**
      * Sets the value of the 'ifa' field.
      * @param value The value of 'ifa'.
      * @return This builder.
      */
    public Builder setIfa(CharSequence value) {
      validate(fields()[17], value);
      this.ifa = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'ifa' field has been set.
      * @return True if the 'ifa' field has been set, false otherwise.
      */
    public boolean hasIfa() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'ifa' field.
      * @return This builder.
      */
    public Builder clearIfa() {
      ifa = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'device' field.
      * @return The value.
      */
    public CharSequence getDevice() {
      return device;
    }

    /**
      * Sets the value of the 'device' field.
      * @param value The value of 'device'.
      * @return This builder.
      */
    public Builder setDevice(CharSequence value) {
      validate(fields()[18], value);
      this.device = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'device' field has been set.
      * @return True if the 'device' field has been set, false otherwise.
      */
    public boolean hasDevice() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'device' field.
      * @return This builder.
      */
    public Builder clearDevice() {
      device = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'devicetype' field.
      * @return The value.
      */
    public Integer getDevicetype() {
      return devicetype;
    }

    /**
      * Sets the value of the 'devicetype' field.
      * @param value The value of 'devicetype'.
      * @return This builder.
      */
    public Builder setDevicetype(int value) {
      validate(fields()[19], value);
      this.devicetype = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'devicetype' field has been set.
      * @return True if the 'devicetype' field has been set, false otherwise.
      */
    public boolean hasDevicetype() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'devicetype' field.
      * @return This builder.
      */
    public Builder clearDevicetype() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'ua' field.
      * @return The value.
      */
    public CharSequence getUa() {
      return ua;
    }

    /**
      * Sets the value of the 'ua' field.
      * @param value The value of 'ua'.
      * @return This builder.
      */
    public Builder setUa(CharSequence value) {
      validate(fields()[20], value);
      this.ua = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'ua' field has been set.
      * @return True if the 'ua' field has been set, false otherwise.
      */
    public boolean hasUa() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'ua' field.
      * @return This builder.
      */
    public Builder clearUa() {
      ua = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'ip' field.
      * @return The value.
      */
    public CharSequence getIp() {
      return ip;
    }

    /**
      * Sets the value of the 'ip' field.
      * @param value The value of 'ip'.
      * @return This builder.
      */
    public Builder setIp(CharSequence value) {
      validate(fields()[21], value);
      this.ip = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'ip' field has been set.
      * @return True if the 'ip' field has been set, false otherwise.
      */
    public boolean hasIp() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'ip' field.
      * @return This builder.
      */
    public Builder clearIp() {
      ip = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'location' field.
      * @return The value.
      */
    public CharSequence getLocation() {
      return location;
    }

    /**
      * Sets the value of the 'location' field.
      * @param value The value of 'location'.
      * @return This builder.
      */
    public Builder setLocation(CharSequence value) {
      validate(fields()[22], value);
      this.location = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'location' field has been set.
      * @return True if the 'location' field has been set, false otherwise.
      */
    public boolean hasLocation() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'location' field.
      * @return This builder.
      */
    public Builder clearLocation() {
      location = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'w' field.
      * @return The value.
      */
    public Integer getW() {
      return w;
    }

    /**
      * Sets the value of the 'w' field.
      * @param value The value of 'w'.
      * @return This builder.
      */
    public Builder setW(int value) {
      validate(fields()[23], value);
      this.w = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'w' field has been set.
      * @return True if the 'w' field has been set, false otherwise.
      */
    public boolean hasW() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'w' field.
      * @return This builder.
      */
    public Builder clearW() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'h' field.
      * @return The value.
      */
    public Integer getH() {
      return h;
    }

    /**
      * Sets the value of the 'h' field.
      * @param value The value of 'h'.
      * @return This builder.
      */
    public Builder setH(int value) {
      validate(fields()[24], value);
      this.h = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'h' field has been set.
      * @return True if the 'h' field has been set, false otherwise.
      */
    public boolean hasH() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'h' field.
      * @return This builder.
      */
    public Builder clearH() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'pid' field.
      * @return The value.
      */
    public CharSequence getPid() {
      return pid;
    }

    /**
      * Sets the value of the 'pid' field.
      * @param value The value of 'pid'.
      * @return This builder.
      */
    public Builder setPid(CharSequence value) {
      validate(fields()[25], value);
      this.pid = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'pid' field has been set.
      * @return True if the 'pid' field has been set, false otherwise.
      */
    public boolean hasPid() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'pid' field.
      * @return This builder.
      */
    public Builder clearPid() {
      pid = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'pcat' field.
      * @return The value.
      */
    public CharSequence getPcat() {
      return pcat;
    }

    /**
      * Sets the value of the 'pcat' field.
      * @param value The value of 'pcat'.
      * @return This builder.
      */
    public Builder setPcat(CharSequence value) {
      validate(fields()[26], value);
      this.pcat = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'pcat' field has been set.
      * @return True if the 'pcat' field has been set, false otherwise.
      */
    public boolean hasPcat() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'pcat' field.
      * @return This builder.
      */
    public Builder clearPcat() {
      pcat = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'media' field.
      * @return The value.
      */
    public CharSequence getMedia() {
      return media;
    }

    /**
      * Sets the value of the 'media' field.
      * @param value The value of 'media'.
      * @return This builder.
      */
    public Builder setMedia(CharSequence value) {
      validate(fields()[27], value);
      this.media = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'media' field has been set.
      * @return True if the 'media' field has been set, false otherwise.
      */
    public boolean hasMedia() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'media' field.
      * @return This builder.
      */
    public Builder clearMedia() {
      media = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'density' field.
      * @return The value.
      */
    public CharSequence getDensity() {
      return density;
    }

    /**
      * Sets the value of the 'density' field.
      * @param value The value of 'density'.
      * @return This builder.
      */
    public Builder setDensity(CharSequence value) {
      validate(fields()[28], value);
      this.density = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'density' field has been set.
      * @return True if the 'density' field has been set, false otherwise.
      */
    public boolean hasDensity() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'density' field.
      * @return This builder.
      */
    public Builder clearDensity() {
      density = null;
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'dealid' field.
      * @return The value.
      */
    public CharSequence getDealid() {
      return dealid;
    }

    /**
      * Sets the value of the 'dealid' field.
      * @param value The value of 'dealid'.
      * @return This builder.
      */
    public Builder setDealid(CharSequence value) {
      validate(fields()[29], value);
      this.dealid = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'dealid' field has been set.
      * @return True if the 'dealid' field has been set, false otherwise.
      */
    public boolean hasDealid() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'dealid' field.
      * @return This builder.
      */
    public Builder clearDealid() {
      dealid = null;
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'mcell' field.
      * @return The value.
      */
    public CharSequence getMcell() {
      return mcell;
    }

    /**
      * Sets the value of the 'mcell' field.
      * @param value The value of 'mcell'.
      * @return This builder.
      */
    public Builder setMcell(CharSequence value) {
      validate(fields()[30], value);
      this.mcell = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'mcell' field has been set.
      * @return True if the 'mcell' field has been set, false otherwise.
      */
    public boolean hasMcell() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'mcell' field.
      * @return This builder.
      */
    public Builder clearMcell() {
      mcell = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'label' field.
      * @return The value.
      */
    public CharSequence getLabel() {
      return label;
    }

    /**
      * Sets the value of the 'label' field.
      * @param value The value of 'label'.
      * @return This builder.
      */
    public Builder setLabel(CharSequence value) {
      validate(fields()[31], value);
      this.label = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'label' field has been set.
      * @return True if the 'label' field has been set, false otherwise.
      */
    public boolean hasLabel() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'label' field.
      * @return This builder.
      */
    public Builder clearLabel() {
      label = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'lat' field.
      * @return The value.
      */
    public CharSequence getLat() {
      return lat;
    }

    /**
      * Sets the value of the 'lat' field.
      * @param value The value of 'lat'.
      * @return This builder.
      */
    public Builder setLat(CharSequence value) {
      validate(fields()[32], value);
      this.lat = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'lat' field has been set.
      * @return True if the 'lat' field has been set, false otherwise.
      */
    public boolean hasLat() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'lat' field.
      * @return This builder.
      */
    public Builder clearLat() {
      lat = null;
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'lon' field.
      * @return The value.
      */
    public CharSequence getLon() {
      return lon;
    }

    /**
      * Sets the value of the 'lon' field.
      * @param value The value of 'lon'.
      * @return This builder.
      */
    public Builder setLon(CharSequence value) {
      validate(fields()[33], value);
      this.lon = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'lon' field has been set.
      * @return True if the 'lon' field has been set, false otherwise.
      */
    public boolean hasLon() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'lon' field.
      * @return This builder.
      */
    public Builder clearLon() {
      lon = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'make' field.
      * @return The value.
      */
    public CharSequence getMake() {
      return make;
    }

    /**
      * Sets the value of the 'make' field.
      * @param value The value of 'make'.
      * @return This builder.
      */
    public Builder setMake(CharSequence value) {
      validate(fields()[34], value);
      this.make = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'make' field has been set.
      * @return True if the 'make' field has been set, false otherwise.
      */
    public boolean hasMake() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'make' field.
      * @return This builder.
      */
    public Builder clearMake() {
      make = null;
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'model' field.
      * @return The value.
      */
    public CharSequence getModel() {
      return model;
    }

    /**
      * Sets the value of the 'model' field.
      * @param value The value of 'model'.
      * @return This builder.
      */
    public Builder setModel(CharSequence value) {
      validate(fields()[35], value);
      this.model = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'model' field has been set.
      * @return True if the 'model' field has been set, false otherwise.
      */
    public boolean hasModel() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'model' field.
      * @return This builder.
      */
    public Builder clearModel() {
      model = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'test' field.
      * @return The value.
      */
    public Integer getTest() {
      return test;
    }

    /**
      * Sets the value of the 'test' field.
      * @param value The value of 'test'.
      * @return This builder.
      */
    public Builder setTest(int value) {
      validate(fields()[36], value);
      this.test = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'test' field has been set.
      * @return True if the 'test' field has been set, false otherwise.
      */
    public boolean hasTest() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'test' field.
      * @return This builder.
      */
    public Builder clearTest() {
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidtype' field.
      * @return The value.
      */
    public Integer getBidtype() {
      return bidtype;
    }

    /**
      * Sets the value of the 'bidtype' field.
      * @param value The value of 'bidtype'.
      * @return This builder.
      */
    public Builder setBidtype(int value) {
      validate(fields()[37], value);
      this.bidtype = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'bidtype' field has been set.
      * @return True if the 'bidtype' field has been set, false otherwise.
      */
    public boolean hasBidtype() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'bidtype' field.
      * @return This builder.
      */
    public Builder clearBidtype() {
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidfloor' field.
      * @return The value.
      */
    public Integer getBidfloor() {
      return bidfloor;
    }

    /**
      * Sets the value of the 'bidfloor' field.
      * @param value The value of 'bidfloor'.
      * @return This builder.
      */
    public Builder setBidfloor(int value) {
      validate(fields()[38], value);
      this.bidfloor = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'bidfloor' field has been set.
      * @return True if the 'bidfloor' field has been set, false otherwise.
      */
    public boolean hasBidfloor() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'bidfloor' field.
      * @return This builder.
      */
    public Builder clearBidfloor() {
      fieldSetFlags()[38] = false;
      return this;
    }

    @Override
    @SuppressWarnings("unchecked")
    public MediaRequest build() {
      try {
        MediaRequest record = new MediaRequest();
        record.bid = fieldSetFlags()[0] ? this.bid : (CharSequence) defaultValue(fields()[0]);
        record.sspid = fieldSetFlags()[1] ? this.sspid : (Long) defaultValue(fields()[1]);
        record.mediaid = fieldSetFlags()[2] ? this.mediaid : (Long) defaultValue(fields()[2]);
        record.adspaceid = fieldSetFlags()[3] ? this.adspaceid : (Long) defaultValue(fields()[3]);
        record.adtype = fieldSetFlags()[4] ? this.adtype : (Integer) defaultValue(fields()[4]);
        record.pkgname = fieldSetFlags()[5] ? this.pkgname : (CharSequence) defaultValue(fields()[5]);
        record.appname = fieldSetFlags()[6] ? this.appname : (CharSequence) defaultValue(fields()[6]);
        record.connectiontype = fieldSetFlags()[7] ? this.connectiontype : (Integer) defaultValue(fields()[7]);
        record.carrier = fieldSetFlags()[8] ? this.carrier : (Integer) defaultValue(fields()[8]);
        record.os = fieldSetFlags()[9] ? this.os : (Integer) defaultValue(fields()[9]);
        record.osv = fieldSetFlags()[10] ? this.osv : (CharSequence) defaultValue(fields()[10]);
        record.did = fieldSetFlags()[11] ? this.did : (CharSequence) defaultValue(fields()[11]);
        record.didmd5 = fieldSetFlags()[12] ? this.didmd5 : (CharSequence) defaultValue(fields()[12]);
        record.dpid = fieldSetFlags()[13] ? this.dpid : (CharSequence) defaultValue(fields()[13]);
        record.dpidmd5 = fieldSetFlags()[14] ? this.dpidmd5 : (CharSequence) defaultValue(fields()[14]);
        record.mac = fieldSetFlags()[15] ? this.mac : (CharSequence) defaultValue(fields()[15]);
        record.macmd5 = fieldSetFlags()[16] ? this.macmd5 : (CharSequence) defaultValue(fields()[16]);
        record.ifa = fieldSetFlags()[17] ? this.ifa : (CharSequence) defaultValue(fields()[17]);
        record.device = fieldSetFlags()[18] ? this.device : (CharSequence) defaultValue(fields()[18]);
        record.devicetype = fieldSetFlags()[19] ? this.devicetype : (Integer) defaultValue(fields()[19]);
        record.ua = fieldSetFlags()[20] ? this.ua : (CharSequence) defaultValue(fields()[20]);
        record.ip = fieldSetFlags()[21] ? this.ip : (CharSequence) defaultValue(fields()[21]);
        record.location = fieldSetFlags()[22] ? this.location : (CharSequence) defaultValue(fields()[22]);
        record.w = fieldSetFlags()[23] ? this.w : (Integer) defaultValue(fields()[23]);
        record.h = fieldSetFlags()[24] ? this.h : (Integer) defaultValue(fields()[24]);
        record.pid = fieldSetFlags()[25] ? this.pid : (CharSequence) defaultValue(fields()[25]);
        record.pcat = fieldSetFlags()[26] ? this.pcat : (CharSequence) defaultValue(fields()[26]);
        record.media = fieldSetFlags()[27] ? this.media : (CharSequence) defaultValue(fields()[27]);
        record.density = fieldSetFlags()[28] ? this.density : (CharSequence) defaultValue(fields()[28]);
        record.dealid = fieldSetFlags()[29] ? this.dealid : (CharSequence) defaultValue(fields()[29]);
        record.mcell = fieldSetFlags()[30] ? this.mcell : (CharSequence) defaultValue(fields()[30]);
        record.label = fieldSetFlags()[31] ? this.label : (CharSequence) defaultValue(fields()[31]);
        record.lat = fieldSetFlags()[32] ? this.lat : (CharSequence) defaultValue(fields()[32]);
        record.lon = fieldSetFlags()[33] ? this.lon : (CharSequence) defaultValue(fields()[33]);
        record.make = fieldSetFlags()[34] ? this.make : (CharSequence) defaultValue(fields()[34]);
        record.model = fieldSetFlags()[35] ? this.model : (CharSequence) defaultValue(fields()[35]);
        record.test = fieldSetFlags()[36] ? this.test : (Integer) defaultValue(fields()[36]);
        record.bidtype = fieldSetFlags()[37] ? this.bidtype : (Integer) defaultValue(fields()[37]);
        record.bidfloor = fieldSetFlags()[38] ? this.bidfloor : (Integer) defaultValue(fields()[38]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<MediaRequest>
    WRITER$ = (org.apache.avro.io.DatumWriter<MediaRequest>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<MediaRequest>
    READER$ = (org.apache.avro.io.DatumReader<MediaRequest>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

}
